%記法の本来の目的は、文字列に含まれる「’’」や「””」を「（）」などの
非英数字に置き換えて、「’’」や「””」に対するエスケープを省略するために利用する

％ｗ記法とは、文字列からなる配列を作成したいときに「[]」(ブランケット)や「””」
（ダブルクォーテーション）を省略して記述するためのrubyの構文です。

%w(文字列1

%w(文字列1　文字列2　文字列3…)

文字列間の空白は配列の要素の区切りとなります。

％ｗ記法を使うと、プログラムコードの可読性が良くなって、コーディングも簡単に
なるので、よく利用される書き方です。

%w記法を使って配列を作ってみる

％ｗ記法を使わない場合と、使う場合のコードの違いを比較して、どのように稼働区政
が良くなるかを確認してみましょう。

puts ["侍","ブログ","ruby","\"%w記法\""]

puts %w(侍　ブログ　ruby "%w記法")

%w記法は、%wと同様に空白区切りの文字列から配列を作成できます。

%w →　式展開なし
%W →　式展開あり

blog = "ブログ"
puts %W(侍 #{ブログ})

blog = "ブログ"
puts %w(侍 #{blog})

このように、前者の%Wは変数blogの値が配列に登録されて式展開することが確認できました


%記法または％Q記法は””（ダブルクォーテーション）の代替です。

％または％Q記法を使うと、文字列の中の「”」のエスケープを省略して文字列を作成
できるので、可読性を高めるために有効です。

puts "\"侍\" \"ブログ\""

puts %("侍"　”ブログ”)

％と％Ｑ同じ意味

％ｑ記法は「’’」（シングルクォーテーション）の代替です。
％ｑ記法を使うと、文字列中の「’」のエスケープを省略して文字列を作成できます。
「’’」と同様に式展開はしません。

puts '\'侍\' ブログ'

puts %q('侍'　ブログ)

%r記法を使うと、正規表現内にある「/」や「[」などの文字に対するエスケープを
省略し、プログラムコードの可読性を上げることができます。


/https:\/\/www.sejuku.net\/blog\//

%r記法を使って「！」を使ったコード

%r!https://www.sejuku.net/blog/!

%i記法は、%wと同様に空白区切りの文字列から配列を作成しますが、
こちらは配列の要素がシンボルになります。

％i　→　式展開あり
%I　→　式展開なし

%i記法を使って、次の2つのサンプルコード同じ結果を返すことを確認して
みましょう。

p [:samurai, :blog, :ruby]

p %i(samurai, blog, ruby)



